
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String       @id @default(cuid())
  email        String       @unique
  name         String?
  password     String
  role         Role         @default(STUDENT)
  createdAt    DateTime     @default(now())
  topics       Topic[]
  diaryEntries DiaryEntry[]
  goals        Goal[]       // Relation field for goals
}

model Goal {
  id        String   @id @default(cuid())
  title     String
  target    Int
  unit      String
  dueDate   DateTime
  progress  Int
  completed Boolean
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?  // This makes the user relationship optional
}


model DiaryEntry {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  date      DateTime @unique
  entry     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Topic {
  id         String     @id @default(uuid())
  title      String
  progress   Int        @default(0)
  user       User       @relation(fields: [userId], references: [id])
  userId     String
  subtopics  Subtopic[]
}

model Subtopic {
  id         String   @id @default(uuid())
  title      String
  completed  Boolean  @default(false)
  topic      Topic    @relation(fields: [topicId], references: [id])
  topicId    String
}

enum Role {
  ADMIN
  TEACHER
  STUDENT
}

model OTP {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  otp       String
  expiresAt DateTime
  createdAt DateTime @default(now())
}
